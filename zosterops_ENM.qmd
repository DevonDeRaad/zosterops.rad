---
title: "Ecological niche modeling for *Zosterops simplex*"
format: html
editor: visual
toc: true
toc-title: Document Contents
number-sections: true
embed-resources: true
---

<br>

### Libraries

The R packages [grinnell](https://github.com/fmachados/grinnell), [moransfast](https://github.com/mcooper/moranfast/tree/master), and [kuenm](https://github.com/marlonecobos/kuenm) are only on GitHub and some of them need compilation, install them using the package `remotes` and follow specific instructions if needed.

```{r, results='hide'}
library(terra)
library(geodata)
library(moranfast) 
library(spThin)
```

<br>

### Data

Our data consists of occurrence records of *Z. simplex* downloaded from [GBIF](https://www.gbif.org/), and raster layers obtained from the [MERRAClim database](https://datadryad.org/stash/dataset/doi:10.5061/dryad.s2v81).

#### Manual processing of occurrence data

Occurrence records were processed manually to filter out erroneous or uncertain data. The steps followed are listed below:

-   Read into QGIS the initial records (**280045**).
-   Consulting Avibase, removed 1 record under the name *Zosterops simplex salvadorii* A.B.Meyer & Wiglesworth, 1894, as this taxon is generally considered as a full species, *Z. salvadorii*.
-   Removed 18620 records from USA.
-   Removed records with no geographic coordinates, leaving 261430 records.
-   Removed 80 occurrences with coordinate uncertainty \> 10000 m.
-   Removed 17215 records with year before 2000 (**243902** remaining records)
-   Checked range, via descriptions in Avibase
    -   Geographic range:
        -   *Zosterops simplex simplex*: breeds in eastern China (from extreme southern Gansu east to Jiangsu, south to eastern Yunnan, Guangxi, Guangdong and Fujian), Taiwan, and northeastern Vietnam; northern populations migratory, wintering from southeastern China to Thailand and central Indochina
        -   *Zosterops simplex hainanus*: Hainan (s China)
        -   *Zosterops simplex williamsoni*: southern Thailand and east coast of northern and central Thai-Malay Peninsula
        -   *Zosterops simplex erwini*: coastal forests of the western and southeastern Thai-Malay Peninsula, of Sumatra, the Riau Islands, Bangka, and the Natuna Islands; population of coastal western Borneo provisionally assigned here, but possibly a distinct taxon
    -   Source: Clements checklist
-   Checked range further via consulting northern/eastern limit in [BirdLife](http://datazone.birdlife.org/species/factsheet/swinhoes-white-eye-zosterops-simplex/distribution)
    -   Removed a bunch of NE China records considering this source.
-   Removed 2 more records, which were from Baja California!
-   Checked for coincidence with MERRAClim dataset. MERRA is not clipped to coasts, so we used the China_ADM coverage from DivaGIS. Removed 20643 records that are "offshore."
-   The total remaining records (**222673**) were saved in CSV format.

#### Reading occurrence data and further filtering

```{r}
# clean data
occ <- read.csv("Data/Z_simplex_clean.csv")

# kepp only species, longitude, and latitude
colnames(occ)

occ <- occ[, c("species", "decimalLon", "decimalLat")]

# rename columns
colnames(occ) <- c("Species", "Longitude", "Latitude")

# remove duplicates
occ <- unique(occ)

# save data
write.csv(occ, "Data/Z_simplex_clean_nodup.csv", row.names = FALSE)
```

#### Reading raster layers and initial selection

```{r}
# variable
var <- rast(list.files("Data/5m_mean_00s", pattern = ".tif$", full.names = T))

# exclude the ones that combine information and sort them
names(var)

var <- var[[c(1, 12:17, 2:9)]]

# renaming
names(var) <- paste0("BIO", c(1:7, 10:17))
```

<br>

### Spatial thinning

To reduce biases from spatial autocorrelation, we spatially rarefied the records. Various distances for thinning records were used to understand their effects on our data.

#### Thinning

```{r}
# set of records keeping only one occurrence per pixel
occ_pix <- extract(var[[1]], occ[, 2:3], cells = TRUE)[, 3] 
occ_opp <- occ[!duplicated(occ_pix), ] 

# records filtered 10 km
occ_10 <- thin(occ_opp, lat.col = "Latitude", long.col = "Longitude",
               spec.col = "Species", thin.par = 10, reps = 3, 
               locs.thinned.list.return = TRUE, write.files = FALSE,
               write.log.file = FALSE)

occ_10 <- data.frame(Species = occ_opp[1, 1], occ_10[[1]])

# records filtered 20 km
occ_20 <- thin(occ_opp, lat.col = "Latitude", long.col = "Longitude",
               spec.col = "Species", thin.par = 20, reps = 3, 
               locs.thinned.list.return = TRUE, write.files = FALSE,
               write.log.file = FALSE)

occ_20 <- data.frame(Species = occ_opp[1, 1], occ_20[[1]])

# records filtered 50 km
occ_50 <- thin(occ_opp, lat.col = "Latitude", long.col = "Longitude",
               spec.col = "Species", thin.par = 50, reps = 3, 
               locs.thinned.list.return = TRUE, write.files = FALSE,
               write.log.file = FALSE)

occ_50 <- data.frame(Species = occ_opp[1, 1], occ_50[[1]])

# records filtered 100 km
occ_100 <- thin(occ_opp, lat.col = "Latitude", long.col = "Longitude",
               spec.col = "Species", thin.par = 100, reps = 3, 
               locs.thinned.list.return = TRUE, write.files = FALSE,
               write.log.file = FALSE)

occ_100 <- data.frame(Species = occ_opp[1, 1], occ_100[[1]])
```

#### Testing autocorrelation

We used Moran's I and four example variable to test for spatial autocorrelation.

```{r}
# values of example variables
exvar <- var[[c(7, 9, 13, 15)]]
occ_opp <- cbind(occ_opp[, 1:3], extract(exvar, occ_opp[, 2:3])[, -1])
occ_10 <- cbind(occ_10[, 1:3], extract(exvar, occ_10[, 2:3])[, -1])
occ_20 <- cbind(occ_20[, 1:3], extract(exvar, occ_20[, 2:3])[, -1])
occ_50 <- cbind(occ_50[, 1:3], extract(exvar, occ_50[, 2:3])[, -1])
occ_100 <- cbind(occ_100[, 1:3], extract(exvar, occ_100[, 2:3])[, -1])

# Moran's I tests
varn <- colnames(occ_20)[4:7]

## one per pixel
mi <- lapply(varn, function(x) {
  rbind(
    data.frame(variable = x, moranfast(occ_opp[, x], occ_opp$Longitude, 
                                     occ_opp$Latitude)),
    data.frame(variable = x, moranfast(occ_10[, x], occ_10$Longitude,
                                     occ_10$Latitude)),
    data.frame(variable = x, moranfast(occ_20[, x], occ_20$Longitude, 
                                     occ_20$Latitude)),
    data.frame(variable = x, moranfast(occ_50[, x], occ_50$Longitude, 
                                     occ_50$Latitude)),
    data.frame(variable = x, moranfast(occ_100[, x], occ_100$Longitude, 
                                     occ_100$Latitude))
  )
})

# put all together
filt <- c("Pixel", paste(c("10", "20", "50", "100"), "km"))

mi <- lapply(1:4, function(x) {
  rbind(mi_opp[[x]], mi_10[[x]], mi_20[[x]], mi_50[[x]], mi_100[[x]])
})

np <- c(nrow(occ_opp), nrow(occ_10), nrow(occ_20), nrow(occ_50), nrow(occ_100))

mi <- data.frame(Filter = rep(filt, 4), 
                 N_points = rep(np, 4),
                 do.call(rbind, mi))

mi <- mi[order(unlist(sapply(mi$Filter, function(x) which(filt == x)))), ]

# save results
write.csv(mi, "Data/spatial_autocorrelation.csv", row.names = FALSE)

write.csv(occ_50, "Data/data_thinned_50km.csv", row.names = FALSE)
write.csv(occ_100, "Data/data_thinned_100km.csv", row.names = FALSE)
```

#### How data looks like after thinning

```{r}
# world map
wm <- world(path = "Data")

# plot
par(mfrow = c(1, 2), mar = rep(1, 4), cex = 0.8)

plot(wm, xlim = c(90, 125), ylim = c(0, 40), col = "gray80", border = "gray50", 
     mar = NA, main = "One record per pixel")
points(occ_opp[, 2:3], pch = 1, cex = 0.8, col = "gray10")
legend(90, 40, legend = c("No pixel duplicates"), pch = 1, 
       col = "gray10", bty = "n", cex = 0.8)

plot(wm, xlim = c(90, 125), ylim = c(0, 40), col = "gray80", border = "gray50", 
     mar = NA, main = "Thinned data (50 km and 100 km)")
points(occ_50[, 2:3], pch = 16, col = "gray15")
points(occ_100[, 2:3], pch = 3, col = "red")
legend(90, 40, legend = c("50 km", "100 km"), pch = c(16, 3), 
       col = c("gray15", "red"), bty = "n", cex = 0.8)
```

<br>

### Calibration area simulation

#### Preparing data

```{r}

```

#### Running simulations

```{r}

```

<br>

### Variable reduction

```{r}

```

<br>

### Ecological niche modeling

#### Preparing data

```{r}

```

#### Model calibration

```{r}

```

#### Model projection

```{r}

```

#### Model statistics

```{r}

```

#### Extrapolation risk analysis

```{r}

```
